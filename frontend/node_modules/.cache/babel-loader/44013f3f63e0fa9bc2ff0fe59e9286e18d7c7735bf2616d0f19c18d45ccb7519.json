{"ast":null,"code":"var _jsxFileName = \"C:\\\\React\\\\nodeapi2\\\\frontend\\\\src\\\\pages\\\\PortfolioCreateScreen.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createPortfolio } from '../actions/portfolioActions';\nimport { PORTFOLIOS_CREATE_RESET } from '../constants/portfolioConstants';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PortfolioCreateScreen = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [github, setGithub] = useState('');\n  const [live, setLive] = useState('');\n  const [images, setImages] = useState([]);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const portfolioCreate = useSelector(state => state.portfolioCreate);\n  const {\n    success: successCreate,\n    error: errorCreate\n  } = portfolioCreate;\n  useEffect(() => {\n    if (successCreate) {\n      dispatch({\n        type: PORTFOLIOS_CREATE_RESET\n      });\n      navigate('/pushme');\n    }\n  }, [dispatch, successCreate, errorCreate, navigate]);\n  const uploadFileHandler = async e => {\n    const fileInput = e.target;\n    if (fileInput && fileInput.files && fileInput.files.length > 0) {\n      const filesArray = Array.from(fileInput.files);\n      const formData = new FormData();\n      filesArray.forEach((file, index) => {\n        formData.append('images', file); // Use 'images' as the field name\n      });\n\n      console.log(formData);\n      try {\n        const config = {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n        await axios.post('/api/upload', formData, config);\n        const {\n          data\n        } = await axios.post('/api/upload', formData, config);\n        setImages(data); // data should be an array of image file paths\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  };\n  const submitHandler = async e => {\n    e.preventDefault();\n    dispatch(createPortfolio({\n      name,\n      github,\n      live,\n      images\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project name...\",\n      name: \"name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Github code source...\",\n      name: \"github\",\n      value: github,\n      onChange: e => setGithub(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Project Url...\",\n      name: \"live\",\n      value: live,\n      onChange: e => setLive(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: images.map(imagePath => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePath,\n        alt: \"Uploaded\",\n        style: {\n          width: '100px',\n          height: '100px',\n          objectFit: 'cover'\n        }\n      }, imagePath, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      multiple: true,\n      onChange: uploadFileHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Send!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(PortfolioCreateScreen, \"ETUmPFSRdkBGKvQGk9eHwkAI7FA=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = PortfolioCreateScreen;\nexport default PortfolioCreateScreen;\nvar _c;\n$RefreshReg$(_c, \"PortfolioCreateScreen\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","createPortfolio","PORTFOLIOS_CREATE_RESET","useNavigate","axios","jsxDEV","_jsxDEV","PortfolioCreateScreen","_s","name","setName","github","setGithub","live","setLive","images","setImages","navigate","dispatch","portfolioCreate","state","success","successCreate","error","errorCreate","type","uploadFileHandler","e","fileInput","target","files","length","filesArray","Array","from","formData","FormData","forEach","file","index","append","console","log","config","headers","post","data","submitHandler","preventDefault","onSubmit","children","placeholder","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","imagePath","src","alt","style","width","height","objectFit","multiple","_c","$RefreshReg$"],"sources":["C:/React/nodeapi2/frontend/src/pages/PortfolioCreateScreen.tsx"],"sourcesContent":["import React, { useEffect, useState, ChangeEvent, FormEvent } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { createPortfolio } from '../actions/portfolioActions'\r\nimport { PORTFOLIOS_CREATE_RESET } from '../constants/portfolioConstants'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\ninterface RootState {\r\n  portfolioCreate: {\r\n    loading: boolean\r\n    success: boolean\r\n    error: boolean\r\n    // ... other properties\r\n  }\r\n}\r\n\r\nconst PortfolioCreateScreen = () => {\r\n  const [name, setName] = useState('')\r\n  const [github, setGithub] = useState('')\r\n  const [live, setLive] = useState('')\r\n  const [images, setImages] = useState<string[]>([])\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch<Dispatch<any>>()\r\n\r\n  const portfolioCreate = useSelector(\r\n    (state: RootState) => state.portfolioCreate\r\n  )\r\n\r\n  const { success: successCreate, error: errorCreate } = portfolioCreate\r\n\r\n  useEffect(() => {\r\n    if (successCreate) {\r\n      dispatch({ type: PORTFOLIOS_CREATE_RESET })\r\n      navigate('/pushme')\r\n    }\r\n  }, [dispatch, successCreate, errorCreate, navigate])\r\n\r\n  const uploadFileHandler = async (e: ChangeEvent<HTMLInputElement>) => {\r\n    const fileInput = e.target as HTMLInputElement\r\n    if (fileInput && fileInput.files && fileInput.files.length > 0) {\r\n      const filesArray: File[] = Array.from(fileInput.files)\r\n      const formData = new FormData()\r\n      filesArray.forEach((file, index) => {\r\n        formData.append('images', file) // Use 'images' as the field name\r\n      })\r\n      console.log(formData)\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n          }\r\n        }\r\n        await axios.post('/api/upload', formData, config)\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n        setImages(data) // data should be an array of image file paths\r\n      } catch (error) {\r\n        console.error(error)\r\n      }\r\n    }\r\n  }\r\n\r\n  const submitHandler = async (e: FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      createPortfolio({\r\n        name,\r\n        github,\r\n        live,\r\n        images\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project name...\"\r\n        name=\"name\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Github code source...\"\r\n        name=\"github\"\r\n        value={github}\r\n        onChange={(e) => setGithub(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Project Url...\"\r\n        name=\"live\"\r\n        value={live}\r\n        onChange={(e) => setLive(e.target.value)}\r\n      />\r\n      <div>\r\n        {/* Display the selected images */}\r\n        {images.map((imagePath) => (\r\n          <img\r\n            key={imagePath}\r\n            src={imagePath}\r\n            alt=\"Uploaded\"\r\n            style={{ width: '100px', height: '100px', objectFit: 'cover' }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <input type=\"file\" multiple onChange={uploadFileHandler} />\r\n      <button type=\"submit\">Send!</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PortfolioCreateScreen\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}